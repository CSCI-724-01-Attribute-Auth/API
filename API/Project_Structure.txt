API/
│
├── Data/
│   ├── DBContext.cs                   // Represents the database context for Entity Framework, managing the database connection and sets for entities (e.g., Movies, Persons, AuthorizedAttributes).
│   ├── DataFactory.cs                 // Responsible for seeding the database with sample data, including generating random movies and crew members.
│   ├── IndexBuilder.cs                 // Builds and manages an index for authorized attributes, ensuring efficient access based on client ID and method.
│
├── Models/
│   ├── Movie.cs                       // Defines the Movie entity, including properties such as Title, Description, ReleaseDate, TotalBudget, and TotalCost.
│   ├── Person.cs                      // Represents a crew member with properties like Id, Name, BirthDate, and MostFamousMovieId.
│   ├── CrewMember.cs                  // Connects Movies and Persons, representing the relationship between them.
│   ├── AuthorizedAttributes.cs         // Contains properties for managing API authorization attributes, such as ClientId, Method, Path, and JSONAttributeList.
│
├── App_Start/
│   ├── DependencyRegistration.cs       // Handles the registration of dependencies for Dependency Injection, ensuring services are correctly instantiated.
│
├── Program.cs                          // The entry point for the application, responsible for configuring the web host, initializing the database, and seeding data if necessary.
│
├── Startup.cs                          // Configures services and the application pipeline, including CORS, database context, JSON options, and routing.
│
├── Controllers/
│   ├── MoviesController.cs             // Manages API endpoints related to movies, such as fetching movies and creating new entries.
│   ├── PersonsController.cs            // Handles API endpoints for managing crew members, including adding and retrieving persons.
│   ├── AuthorizedAttributesController.cs// Manages endpoints related to authorized attributes for API access control.
│
└── appsettings.json                     // Configuration file containing settings for the application, such as connection strings and other app settings.
